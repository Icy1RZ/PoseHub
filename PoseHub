local penis = game.Players.LocalPlayer.Character.HumanoidRootPart

for i = 2, 5, 2 do
    penis.CFrame = penis.CFrame + Vector3.new(0, 2, 0)
end
wait(.1)
for i = 2, 10, 2 do
    penis.CFrame = penis.CFrame + Vector3.new(0, 2, 0)
end
wait(.1)
for i = 2, 15, 2 do
    penis.CFrame = penis.CFrame + Vector3.new(0, 2, 0)
end
wait(.1)
for i = 2, 20, 2 do
    penis.CFrame = penis.CFrame + Vector3.new(0, 2, 0)
end
wait(.1)
for i = 2, 25, 2 do
    penis.CFrame = penis.CFrame + Vector3.new(0, 2, 0)
end
wait(.1)
for i = 2, 30, 2 do
    penis.CFrame = penis.CFrame + Vector3.new(0, 2, 0)
end

local HatChar = game.Players.LocalPlayer.Character






HumanDied = false
local reanim
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end

end
_G.ClickFling=false -- Set this to true if u want.
loadstring(game:HttpGet(('https://raw.githubusercontent.com/OofHead-FE/nexo-before-deleted/main/NexoPD'),true))()

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character.CWExtra.NexoPD
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'
fuckor = false


coroutine.wrap(function()
while true do -- anim changer
if HumanDied then mousechanger:Disconnect() attacklol:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
if Root.Velocity.y > 1 then -- jump

NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),0+0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(172.18+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(6+2*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-6+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.1*math["cos"](sine/10),-0.36+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-5.11+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-11.23+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.y < -1 then -- fall

NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),0+0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(172.18+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(6+2*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-6+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.1*math["cos"](sine/10),-0.36+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-5.11+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-11.23+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),0+0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(6+2*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-6+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 then -- walk

NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),0+0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+68*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(6+2*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+-68*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-6+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+-68*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.1*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+68*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)

elseif Root.Velocity.Magnitude > 20 then -- run

end


elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle

NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(0.8+0*math["cos"](sine/10),0.8+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-0.8+0*math["cos"](sine/10),0.8+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.8+0*math["cos"](sine/10),-0.8+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.8+0*math["cos"](sine/10),-0.8+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == true then -- walk
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(0.8+0*math["cos"](sine/10),0.8+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-0.8+0*math["cos"](sine/10),0.8+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.8+0*math["cos"](sine/10),-0.8+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.8+0*math["cos"](sine/10),-0.8+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == false then -- walk
Mode='1'
elseif Root.Velocity.Magnitude > 20 then -- run

end


elseif Mode == '3' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0=NECK.C0:Lerp(CFrame.new(-0.36+0*math["cos"](sine/10),1.36+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(92.7+0*math["cos"](sine/10)),math.rad(728.5+0*math["cos"](sine/10)),math.rad(630.68+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),2+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(0.1+0*math["cos"](sine/10),-3+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(26.98+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-0.6+0*math["cos"](sine/10),-0.5+0*math["cos"](sine/10))*CFrame.Angles(math.rad(90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-0.6+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == true then -- walk
NECK.C0=NECK.C0:Lerp(CFrame.new(-0.36+0*math["cos"](sine/10),1.36+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(92.7+0*math["cos"](sine/10)),math.rad(728.5+0*math["cos"](sine/10)),math.rad(630.68+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),2+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(0.1+0*math["cos"](sine/10),-3+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(26.98+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-0.6+0*math["cos"](sine/10),-0.5+0*math["cos"](sine/10))*CFrame.Angles(math.rad(90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-0.6+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == false then
Mode='1'
elseif Root.Velocity.Magnitude > 20 then -- run

end

elseif Mode == '4' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle

NECK.C0=NECK.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0.2+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-3.37+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),-1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == true then -- walk
NECK.C0=NECK.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0.2+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-3.37+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(90+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),-1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == false then
Mode='1'
elseif Root.Velocity.Magnitude > 20 then -- run

end

elseif Mode == '5' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle

NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == true then -- walk
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == false then
Mode='1'
elseif Root.Velocity.Magnitude > 20 then -- run

end

elseif Mode == '6' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle

NECK.C0=NECK.C0:Lerp(CFrame.new(1.3+0*math["cos"](sine/10),-0.2+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),-2.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == true then -- walk
elseif Root.Velocity.Magnitude < 200 and fuckor == false then
Mode='1'
elseif Root.Velocity.Magnitude > 20 then -- run

end


elseif Mode == '7' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle

NECK.C0=NECK.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),1.36+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-90+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(90+0*math["cos"](sine/10)),math.rad(-180+0*math["cos"](sine/10)),math.rad(90+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),1.36+0*math["cos"](sine/10),-1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(90+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-2.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(90+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == true then -- walk
elseif Root.Velocity.Magnitude < 200 and fuckor == false then
Mode='1'
elseif Root.Velocity.Magnitude > 20 then -- run

end

elseif Mode == '8' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle

NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),1.36+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-90+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(90+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),-0+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2)
elseif Root.Velocity.Magnitude < 200 and fuckor == true then -- walk
elseif Root.Velocity.Magnitude < 200 and fuckor == false then 
Mode='1'
elseif Root.Velocity.Magnitude > 20 then -- run

end

end
srv.RenderStepped:Wait()
end
end)()

game.StarterGui:SetCore("SendNotification",  {
Title = "Script was made by Script Verse";
Text = "enjoy.";
Duration = 2;
})

local PoseHub = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Name = Instance.new("TextLabel")
local option = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local OFF = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local ON = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local Buttons = Instance.new("ScrollingFrame")
local Normal = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local chair = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local Plane = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local Carpet = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local Sign = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Table = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local Flag = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local Frame2 = Instance.new("TextButton")
local UICorner_11 = Instance.new("UICorner")
local P2Frame = Instance.new("Frame")
local Name_2 = Instance.new("TextLabel")
local Buttons_2 = Instance.new("ScrollingFrame")
local Normal_2 = Instance.new("TextButton")
local UICorner_12 = Instance.new("UICorner")
local Frame1 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local close = Instance.new("Frame")
local XXX = Instance.new("Frame")
local XCX = Instance.new("TextButton")
local UICorner_14 = Instance.new("UICorner")

--Properties:

PoseHub.Name = "PoseHub"
PoseHub.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
PoseHub.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = PoseHub
Frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
Frame.BackgroundTransparency = 0.100
Frame.Position = UDim2.new(0.355273604, 0, 0.351219445, 0)
Frame.Size = UDim2.new(0.288659781, 0, 0.295935005, 0)

Name.Name = "Name"
Name.Parent = Frame
Name.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
Name.BackgroundTransparency = 0.200
Name.Size = UDim2.new(1.00000012, 0, 0.0945054963, 0)
Name.Font = Enum.Font.SourceSans
Name.Text = "    PoseHub                        V1"
Name.TextColor3 = Color3.fromRGB(20, 20, 20)
Name.TextSize = 14.000
Name.TextXAlignment = Enum.TextXAlignment.Left

option.Name = "option"
option.Parent = Frame
option.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
option.Position = UDim2.new(0.832417607, 0, 0.873626173, 0)
option.Size = UDim2.new(0.13846153, 0, 0.083516486, 0)

UICorner.Parent = option

OFF.Name = "OFF"
OFF.Parent = option
OFF.BackgroundColor3 = Color3.fromRGB(71, 255, 20)
OFF.Size = UDim2.new(1, 0, 1.00000024, 0)
OFF.Font = Enum.Font.SourceSans
OFF.Text = ""
OFF.TextColor3 = Color3.fromRGB(0, 0, 0)
OFF.TextSize = 14.000

UICorner_2.Parent = OFF

ON.Name = "ON"
ON.Parent = option
ON.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
ON.Size = UDim2.new(1.00000083, 0, 1.0000006, 0)
ON.Visible = false
ON.Font = Enum.Font.SourceSans
ON.Text = ""
ON.TextColor3 = Color3.fromRGB(0, 0, 0)
ON.TextSize = 14.000

UICorner_3.Parent = ON

Buttons.Name = "Buttons"
Buttons.Parent = Frame
Buttons.Active = true
Buttons.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
Buttons.BackgroundTransparency = 0.100
Buttons.BorderSizePixel = 0
Buttons.Position = UDim2.new(0.0192306861, 0, 0.164835051, 0)
Buttons.Size = UDim2.new(0.951648653, 0, 0.671428442, 0)
Buttons.ScrollBarThickness = 8
Buttons.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left

Normal.Name = "Normal"
Normal.Parent = Buttons
Normal.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Normal.Position = UDim2.new(0.0894919783, 0, 0.0167175289, 0)
Normal.Size = UDim2.new(0.818822086, 0, 0.114207476, 0)
Normal.Font = Enum.Font.SourceSans
Normal.Text = "Normal animations"
Normal.TextColor3 = Color3.fromRGB(255, 255, 255)
Normal.TextSize = 14.000
Normal.MouseButton1Down:Connect(function()
  Mode='1'
end)

UICorner_4.Parent = Normal

chair.Name = "chair"
chair.Parent = Buttons
chair.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
chair.Position = UDim2.new(0.0894919783, 0, 0.154080138, 0)
chair.Size = UDim2.new(0.818822086, 0, 0.114207476, 0)
chair.Font = Enum.Font.SourceSans
chair.Text = "Chair"
chair.TextColor3 = Color3.fromRGB(255, 255, 255)
chair.TextSize = 14.000
chair.MouseButton1Down:Connect(function()
  Mode='2'
end)

UICorner_5.Parent = chair

Plane.Name = "Plane"
Plane.Parent = Buttons
Plane.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Plane.Position = UDim2.new(0.0894919783, 0, 0.29418999, 0)
Plane.Size = UDim2.new(0.818822086, 0, 0.114207476, 0)
Plane.Font = Enum.Font.SourceSans
Plane.Text = "Plane"
Plane.TextColor3 = Color3.fromRGB(255, 255, 255)
Plane.TextSize = 14.000
Plane.MouseButton1Down:Connect(function()
  Mode='3'
end)

UICorner_6.Parent = Plane

Carpet.Name = "Carpet"
Carpet.Parent = Buttons
Carpet.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Carpet.Position = UDim2.new(0.0894919783, 0, 0.434299856, 0)
Carpet.Size = UDim2.new(0.818822086, 0, 0.114207476, 0)
Carpet.Font = Enum.Font.SourceSans
Carpet.Text = "Carpet"
Carpet.TextColor3 = Color3.fromRGB(255, 255, 255)
Carpet.TextSize = 14.000
Carpet.MouseButton1Down:Connect(function()
  Mode='4'
end)

UICorner_7.Parent = Carpet

Sign.Name = "Sign"
Sign.Parent = Buttons
Sign.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Sign.Position = UDim2.new(0.0894919783, 0, 0.571662486, 0)
Sign.Size = UDim2.new(0.818822086, 0, 0.114207476, 0)
Sign.Font = Enum.Font.SourceSans
Sign.Text = "Sign"
Sign.TextColor3 = Color3.fromRGB(255, 255, 255)
Sign.TextSize = 14.000
Sign.MouseButton1Down:Connect(function()
  Mode='5'
end)

UICorner_8.Parent = Sign

Table.Name = "Table"
Table.Parent = Buttons
Table.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Table.Position = UDim2.new(0.0894919783, 0, 0.711772382, 0)
Table.Size = UDim2.new(0.818822086, 0, 0.114207476, 0)
Table.Font = Enum.Font.SourceSans
Table.Text = "Flag"
Table.TextColor3 = Color3.fromRGB(255, 255, 255)
Table.TextSize = 14.000
Table.MouseButton1Down:Connect(function()
  Mode='6'
end)

UICorner_9.Parent = Table

Flag.Name = "Flag"
Flag.Parent = Buttons
Flag.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Flag.Position = UDim2.new(0.0952656493, 0, 0.851882219, 0)
Flag.Size = UDim2.new(0.818822086, 0, 0.114207476, 0)
Flag.Font = Enum.Font.SourceSans
Flag.Text = "Table"
Flag.TextColor3 = Color3.fromRGB(255, 255, 255)
Flag.TextSize = 14.000
Flag.MouseButton1Down:Connect(function()
  Mode='7'
end)

UICorner_10.Parent = Flag

Frame2.Name = "Frame 2"
Frame2.Parent = Frame
Frame2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame2.Position = UDim2.new(0.0384615399, 0, 0.873626173, 0)
Frame2.Size = UDim2.new(0.282967031, 0, 0.089011021, 0)
Frame2.Font = Enum.Font.SourceSans
Frame2.Text = "P2"
Frame2.TextColor3 = Color3.fromRGB(0, 0, 0)
Frame2.TextSize = 14.000

UICorner_11.Parent = Frame2

P2Frame.Name = "P2Frame"
P2Frame.Parent = PoseHub
P2Frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
P2Frame.BackgroundTransparency = 0.100
P2Frame.Position = UDim2.new(0.355273604, 0, 0.351219445, 0)
P2Frame.Size = UDim2.new(0.288659781, 0, 0.295935005, 0)
P2Frame.Visible = false

Name_2.Name = "Name"
Name_2.Parent = P2Frame
Name_2.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
Name_2.BackgroundTransparency = 0.200
Name_2.Size = UDim2.new(1.00000012, 0, 0.0945054963, 0)
Name_2.Font = Enum.Font.SourceSans
Name_2.Text = "    Pose Hub"
Name_2.TextColor3 = Color3.fromRGB(20, 20, 20)
Name_2.TextSize = 14.000
Name_2.TextXAlignment = Enum.TextXAlignment.Left

Buttons_2.Name = "Buttons"
Buttons_2.Parent = P2Frame
Buttons_2.Active = true
Buttons_2.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
Buttons_2.BackgroundTransparency = 0.100
Buttons_2.BorderSizePixel = 0
Buttons_2.Position = UDim2.new(0.0192306861, 0, 0.164835051, 0)
Buttons_2.Size = UDim2.new(0.951648653, 0, 0.671428442, 0)
Buttons_2.ScrollBarThickness = 8
Buttons_2.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left

Normal_2.Name = "Normal"
Normal_2.Parent = Buttons_2
Normal_2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Normal_2.Position = UDim2.new(0.0894919783, 0, 0.0167175289, 0)
Normal_2.Size = UDim2.new(0.818822086, 0, 0.114207476, 0)
Normal_2.Font = Enum.Font.SourceSans
Normal_2.Text = "Swirl"
Normal_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Normal_2.TextSize = 14.000
Normal_2.MouseButton1Down:Connect(function()
  Mode='8'
end)

UICorner_12.Parent = Normal_2

Frame1.Name = "Frame 1"
Frame1.Parent = P2Frame
Frame1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame1.Position = UDim2.new(0.0384615399, 0, 0.873626173, 0)
Frame1.Size = UDim2.new(0.282967031, 0, 0.089011021, 0)
Frame1.Font = Enum.Font.SourceSans
Frame1.Text = "P1"
Frame1.TextColor3 = Color3.fromRGB(0, 0, 0)
Frame1.TextSize = 14.000

UICorner_13.Parent = Frame1

close.Name = "close"
close.Parent = PoseHub
close.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
close.Position = UDim2.new(-0.000793000218, 0, 0.209197745, 0)
close.Size = UDim2.new(0.00642346777, 0, 0.1054364, 0)

XXX.Name = "XXX"
XXX.Parent = close
XXX.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
XXX.Position = UDim2.new(4.76837158e-07, 0, 0, 0)
XXX.Size = UDim2.new(19.8531036, 0, 0.999999881, 0)
XXX.Visible = false

XCX.Name = "XCX"
XCX.Parent = XXX
XCX.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
XCX.Position = UDim2.new(0.167900011, 0, 0.339279056, 0)
XCX.Size = UDim2.new(0.653448224, 0, 0.3084355, 0)
XCX.Font = Enum.Font.SourceSans
XCX.Text = "Close"
XCX.TextColor3 = Color3.fromRGB(0, 0, 0)
XCX.TextSize = 14.000

UICorner_14.Parent = XCX

-- Scripts:



local function YWNEKC_fake_script() -- OFF.Script 
	local script = Instance.new('Script', OFF)

	local ON = script.Parent.Parent.ON
	local OFF = script.Parent.Parent.OFF
	
	OFF.MouseButton1Click:Connect(function()
		if ON.Visible == false then
			fuckor = true
			OFF.Visible = false
			ON.Visible = true
		end
		game.StarterGui:SetCore("SendNotification",  {
			Title = "Walking animation set to false";
			Text = "";
			Icon = "";
			Duration = 2;
		})
	end)
end
coroutine.wrap(YWNEKC_fake_script)()
local function SNTRS_fake_script() -- ON.Script 
	local script = Instance.new('Script', ON)

	local ON = script.Parent.Parent.ON
	local OFF = script.Parent.Parent.OFF
	
	ON.MouseButton1Click:Connect(function()
		if OFF.Visible == false then
			fuckor = false
			ON.Visible = false
			OFF.Visible = true
		end
		game.StarterGui:SetCore("SendNotification",  {
			Title = "Walking animation set to true";
			Text = "";
			Icon = "";
			Duration = 2;
		})
	end)
end
coroutine.wrap(SNTRS_fake_script)()
local function MNGFZ_fake_script() -- Frame2.Script 
	local script = Instance.new('Script', Frame2)

	local p2 = script.Parent.Parent["Frame 2"]
	local frame1 = script.Parent.Parent.Parent.Frame
	local frame2 = script.Parent.Parent.Parent.P2Frame
	
	p2.MouseButton1Click:Connect(function()
		if frame2.Visible ==false then
			frame2.Visible = true
			frame1.Visible = false
		end
	end)
end
coroutine.wrap(MNGFZ_fake_script)()
local function YXRBEWG_fake_script() -- Frame.drag 
	local script = Instance.new('LocalScript', Frame)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
end
coroutine.wrap(YXRBEWG_fake_script)()
local function EVFSXPD_fake_script() -- Frame1.Script 
	local script = Instance.new('Script', Frame1)

	local f1 = script.Parent.Parent["Frame 1"]
	local frame1 = script.Parent.Parent.Parent.Frame
	local f2 = script.Parent.Parent.Parent.P2Frame
	
	f1.MouseButton1Click:Connect(function()
		if frame1.Visible == false then
			frame1.Visible = true
			f2.Visible = false
		end
	end)
end
coroutine.wrap(EVFSXPD_fake_script)()
local function OWNAF_fake_script() -- P2Frame.drag 
	local script = Instance.new('LocalScript', P2Frame)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end
coroutine.wrap(OWNAF_fake_script)()
local function LBEPVQD_fake_script() -- XCX.sc 
	local script = Instance.new('Script', XCX)

	local papa = script.Parent.Parent.XCX
	local Frame = script.Parent.Parent.Parent.Parent.Frame
	local p2p = script.Parent.Parent.Parent.Parent.P2Frame
	
	papa.MouseButton1Click:Connect(function()
		if Frame.Visible== true or p2p.Visible == true then
			Frame:Destroy()
			p2p:Destroy()
		end
	end)
end
coroutine.wrap(LBEPVQD_fake_script)()
local function ARGZZ_fake_script() -- close.Script 
	local script = Instance.new('Script', close)

	script.Parent.MouseMoved:Connect(function()
		script.Parent.XXX.Visible = true
	end)
	
	script.Parent.XXX.MouseLeave:Connect(function()
		script.Parent.XXX.Visible = false
	end)
end
coroutine.wrap(ARGZZ_fake_script)()
